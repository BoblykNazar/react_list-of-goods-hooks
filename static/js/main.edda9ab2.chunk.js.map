{"version":3,"sources":["interfaces/SortType.ts","api/GoodsFromServer.ts","components/Buttons.tsx","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","Buttons","isResetButtonVisible","handleClickReset","handleClickSelect","handleClickReverse","sortField","reverse","className","onClick","name","type","cn","length","GoodsList","visibleGoods","map","good","App","useState","setSortField","setReverse","goods","preperedGoods","sort","good1","good2","localeCompare","getPreperedGoods","value","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,qCCACC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SDVUD,K,YAAAA,E,iBAAAA,M,gCEYCE,EAA2B,SAAC,GAOlC,IANLC,EAMI,EANJA,qBACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,QAEA,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAML,EAAkBL,EAASW,OAC1CC,KAAK,SACLH,UACEI,IAAG,SAAU,UAAW,CACtB,WAAYN,IAAcP,EAASW,OALzC,iCAYA,wBACED,QAAS,kBAAML,EAAkBL,EAASc,SAC1CF,KAAK,SACLH,UACEI,IAAG,SAAU,UAAW,CACtB,WAAYN,IAAcP,EAASc,SALzC,4BAYA,wBACEJ,QAASJ,EACTM,KAAK,SACLH,UAAWI,IAAG,SAAU,aAAc,CAAE,YAAaL,IAHvD,qBAQCL,GAEG,wBACEO,QAASN,EACTQ,KAAK,SACLH,UAAU,4BAHZ,uBCrDGM,EAA6B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3C,OACE,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SC+BV,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOb,EAAP,KAAkBc,EAAlB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KAEMN,EAhCR,SACEO,EADF,GAGG,IADChB,EACF,EADEA,UAAWC,EACb,EADaA,QAEPgB,EAAa,YAAOD,GAqB1B,OAnBIhB,GACFiB,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQpB,GACN,KAAKP,EAASW,KACZ,OAAOe,EAAME,cAAcD,GAE7B,KAAK3B,EAASc,OACZ,OAAOY,EAAMZ,OAASa,EAAMb,OAE9B,QACE,OAAO,MAKXN,GACFgB,EAAchB,UAGTgB,EAOcK,CACnB5B,EACA,CAAEM,YAAWC,YAgBTL,EAAuBI,GAAaC,EAE1C,OACE,sBAAKC,UAAU,kBAAf,UACE,cAAC,EAAD,CACEN,qBAAsBA,EACtBC,iBAnBmB,WACvBiB,EAAa,IACbC,GAAW,IAkBPjB,kBAfoB,SAACyB,GACzBT,EAAaS,IAeTxB,mBAZqB,WACzBgB,GAAYd,IAYRD,UAAWA,EACXC,QAASA,IAGX,cAAC,EAAD,CACEQ,aAAcA,QCvEtBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.edda9ab2.chunk.js","sourcesContent":["export enum SortType {\n  name = 'name',\n  length = 'length',\n}\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import cn from 'classnames';\nimport { SortType } from '../interfaces/SortType';\n\ntype Props = {\n  isResetButtonVisible: string | boolean;\n  handleClickReset: () => void;\n  handleClickSelect: (value: SortType) => void;\n  handleClickReverse: () => void;\n  sortField: string;\n  reverse: boolean;\n};\n\nexport const Buttons: React.FC<Props> = ({\n  isResetButtonVisible,\n  handleClickReset,\n  handleClickSelect,\n  handleClickReverse,\n  sortField,\n  reverse,\n}) => {\n  return (\n    <div className=\"buttons\">\n      <button\n        onClick={() => handleClickSelect(SortType.name)}\n        type=\"button\"\n        className={\n          cn('button', 'is-info', {\n            'is-light': sortField !== SortType.name,\n          })\n        }\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        onClick={() => handleClickSelect(SortType.length)}\n        type=\"button\"\n        className={\n          cn('button', 'is-info', {\n            'is-light': sortField !== SortType.length,\n          })\n        }\n      >\n        Sort by length\n      </button>\n\n      <button\n        onClick={handleClickReverse}\n        type=\"button\"\n        className={cn('button', 'is-warning', { 'is-light': !reverse })}\n      >\n        Reverse\n      </button>\n\n      {isResetButtonVisible\n        && (\n          <button\n            onClick={handleClickReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n    </div>\n  );\n};\n","type Props = {\n  visibleGoods: string[];\n};\nexport const GoodsList: React.FC<Props> = ({ visibleGoods }) => {\n  return (\n    <ul>\n      {visibleGoods.map(good => (\n        <li key={good} data-cy=\"Good\">{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { goodsFromServer } from './api/GoodsFromServer';\nimport { FilterParams } from './interfaces/FilterParams';\nimport { SortType } from './interfaces/SortType';\nimport { Buttons } from './components/Buttons';\nimport { GoodsList } from './components/GoodsList';\n\nfunction getPreperedGoods(\n  goods: string[],\n  { sortField, reverse }: FilterParams,\n) {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.name:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreperedGoods(\n    goodsFromServer,\n    { sortField, reverse },\n  );\n\n  const handleClickReset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  const handleClickSelect = (value: SortType) => {\n    setSortField(value);\n  };\n\n  const handleClickReverse = () => {\n    setReverse(!reverse);\n  };\n\n  const isResetButtonVisible = sortField || reverse;\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        isResetButtonVisible={isResetButtonVisible}\n        handleClickReset={handleClickReset}\n        handleClickSelect={handleClickSelect}\n        handleClickReverse={handleClickReverse}\n        sortField={sortField}\n        reverse={reverse}\n      />\n\n      <GoodsList\n        visibleGoods={visibleGoods}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}